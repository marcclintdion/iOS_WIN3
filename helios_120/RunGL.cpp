#define var GLfloat
//####################################################################################################################


#ifdef WIN32
#define glGenerateMipmap       glGenerateMipmapEXT        
#define glGenFramebuffers      glGenFramebuffersEXT    
#define glBindFramebuffer      glBindFramebufferEXT          
#define glFramebufferTexture2D glFramebufferTexture2DEXT            

#define STRICT
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <iostream.h>
#include <fstream.h>
//using namespace std; //___used for string object

#include <GL/gl.h>

HDC	       hDC        = NULL;
HGLRC      hRC        = NULL;
HWND       hWnd       = NULL;
HINSTANCE  hInstance  = NULL;
//-------------------------------
int        WINAPI       WinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);
LRESULT    CALLBACK     WindowProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam);
//-------------------------------
void       ProcessKeyboard();
int        LoadTexture(char *texture_name, GLuint *texture);
//-------------------------------
bool keys[256], keypressed[256];



#include "headerFiles/glext.h" 
#include "headerFiles/glext_Init_A.cpp" 

#include "headerFiles/VSync.h"   

#include <windows.h>

void      ConfigureAndLoadTexture(GLubyte *textureData, GLint texWidth, GLint texHeight );
#include "headerFiles/FreeImage.h"
#include "cpp/freeImage.cpp"

//-----
#endif

//------------------------------------------------------------------------------
var         eyeposition[]    =  {0, 3.6, 9.2, 1.0};
var         lookAt[]         =  {0, -3.6, -28.1998, 1.0};

var         upVector[]       =  {0.0, 1.0, 0.0};
//------------------------------------------------------------------------------


//####################################################################################################################
//####################################################################################################################
//####################################################################################################################


#include <math.h>


//###############################################################################################################################################

#include "MATRIX_MATH.cpp"

//###############################################################################################################################################
//-------------------------------------------------------------------------------------------------------------- 

GLuint shadowMap_2D;


//--------------------------------------------------------------------------------------------------------------
#define BUFFER_OFFSET(i) ((char *)0 + (i))
//----------------------------------------------------------------------------------------

extern GLuint msaaFramebuffer;

void RenderGL(void);
void InitGL  (void);
void shutDownGL(void);

#ifdef WIN32
GLsizei viewWidth    = 1920;
GLsizei viewHeight   = 1080;
#endif
#ifdef __APPLE__
GLfloat viewWidth;
GLfloat viewHeight;
GLuint  viewFramebuffer;        
#endif        
//-------------------------------------------------------------------------------

GLfloat eyePosition[3];
GLfloat look_LEFT_RIGHT;
GLfloat look_UP_DOWN;   


//#########################################################################################################|_FREE_IMAGE

void ConfigureAndLoadTexture(GLubyte *textureData, GLint texWidth, GLint texHeight )
{
        #ifdef __APPLE__
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); 
        //glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_LINEAR);	        
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texWidth, texHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, textureData);
        glGenerateMipmap(GL_TEXTURE_2D);
        #endif
        
        #ifdef WIN32
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_NEAREST); 
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_LINEAR);	        
        glTexParameteri( GL_TEXTURE_2D, GL_GENERATE_MIPMAP_SGIS, GL_TRUE );
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texWidth, texHeight, 0, GL_BGRA, GL_UNSIGNED_BYTE, textureData);
        #endif  
}

//===============================================================================================================================                                                   

GLfloat     modelView[16];
GLfloat     projection[16];
GLfloat     mvpMatrix[16];
GLfloat     mvpMatrixInverse[16];
GLfloat     lightMatrix[16];  
GLfloat     moveSetMatrix[16]; 
GLfloat     textureMatrix[16];

GLuint      UNIFORM_MODELVIEWPROJ;
GLuint      UNIFORM_MODELVIEWPROJ_INVERSE;
GLuint      UNIFORM_LIGHT_MATRIX;
//######################################################################################################################
//----------------------------------------------------
var       lightPositionMultiplier[]                                 =  {   1.0, 1.0, 1.0, 1};
var       goldenSunset_LIGHT_POSITION_01[]                          =  {-0.068917, 18, -0.715183, 1.0};

var       ambient_goldenSunset                                      =      0.451993;   
#include  "_SHADERS/BACKGROUND/goldenSunset_GLOBALS.cpp"
//--------------------------------------------------------
var       wood_LIGHT_POSITION_01[]                                  =  {  -0.168917, 4.73002, -0.115183, 1};
var       shininess_wood                                            =     34.3499;
var       ambient_wood                                              =      0.106997;                            
var       attenuation_SHINY_wood                                    =      1/0.014997;                              
#include  "_SHADERS/BACKGROUND/wood_GLOBALS.cpp"  
//------------------------------------------------------ 
//#include    "_SHADERS/BACKGROUND/wood_32B_GLOBALS.cpp"                                                         
//------------------------------------------------------
var       backDrop_LIGHT_POSITION_01[]                              =  {  -0.168917, 4.73002, -0.115183, 1};
var       shininess_backDrop                                        =     34.3499;
var       ambient_backDrop                                          =      0.0619971;                             
#include  "_SHADERS/BACKGROUND/backDrop_GLOBALS.cpp"                                  
//----------------------------------------------------                              
var       plant_LIGHT_POSITION_01[]                                 =  {  -0.168917, 4.73002, -0.115183, 1};
var       ambient_plant                                             =      0.0539995;                                 
#include  "_SHADERS/BACKGROUND/plant_GLOBALS.cpp"
//-------------------------------------------------           
//######################################################################################################################
//===============================================================================================================================

var frameRateAdjustment  =     1.0; 

//######################################################################################################################
var       globalLinearAttenuation                                   =    0.09;
var       offset[]                                                  =  {20.04, 4.58902, 4.18, 1};
var       moveSet[]                                                 =  { 0.0, 0.0, 0.0}; 
//---------------------------------------------------- 
                                var       movePiece[]               =  { 0.0,     0.0,       0.0,     0.0};
                                //--------------------------------------------------------------                                                    
                                #include    "_MODEL_FOLDERS_/backDrop/backDrop_Globals.cpp"                                                          
                                //===================================================================================================================
                                #include    "_MODEL_FOLDERS_/marcParts/marc_GLOBALS.cpp"
                                //===================================================================================================================    
                                #include    "_MODEL_FOLDERS_/marcParts/head/head_Globals.cpp"                                                                
                                //=================================================================================================================== 
                                #include    "_MODEL_FOLDERS_/tile_2m/tile_2m_Globals.cpp" 
                                //---------------------
                                #include    "_MODEL_FOLDERS_/pyramidTile/pyramidTile_Globals.cpp"     
                                //--------------------------------------------------------------
                                #include    "_MODEL_FOLDERS_/smallPillar/smallPillar_Globals.cpp"     
                                //--------------------------------------------------------------
                                #include    "_MODEL_FOLDERS_/plantPot_01/plantPot_01_Globals.cpp"   
                                //--------------------------------------------------------------  
                                #include    "_MODEL_FOLDERS_/plant_01/plant_01_Globals.cpp"                                                          
                                //-------------------------------------------------------------------
                                #include    "_MODEL_FOLDERS_/rightWall_2x1/rightWall_2x1_Globals.cpp"                                                          
                                //-------------------------------------------------------------------                                                    
                                #include    "_MODEL_FOLDERS_/backWall_2x2/backWall_2x2_Globals.cpp"                                                          
                                //====================================================================================                                                   
                                #include    "ADD_COLLISION_BALL/GLOBALS_1.cpp"
                                //---------------------------------------------
                                #include    "_MODEL_FOLDERS_/spikyBall_0/spikyBall_0_Globals.cpp"                                                          
                                //==============================================================================================================================
                                #include    "_MODEL_FOLDERS_/springBoard/baseMain/baseMain_Globals.cpp"                                                                
                                //====================================================================================                                          
                                #include    "_MODEL_FOLDERS_/springBoard/springCore/springCore_Globals.cpp"                                                                
                                //====================================================================================                                          
                                #include    "_MODEL_FOLDERS_/springBoard/spring/spring_Globals.cpp"                                                                
                                //====================================================================================   






//======================================================================================================================================================================================



#ifdef WIN32
#include "cpp/winInit.cpp"
#endif  


//------------------------------------------------------------------------------------------------------------------------                 
//------------------------------------------------------------------------------------------------------------------------                 
                                                            
var    moveModel[]                           = {0.0, 0.0, 0.0, 0.0};

var    positionY                             =  0.0;
var    positionX                             =  0.0;                                  

var    boundingBox_MAIN_CHARACTER_left_edge  = -0.179;      
var    boundingBox_MAIN_CHARACTER_right_edge =  0.179; 
var    boundingBox_MAIN_CHARACTER_lower_edge =  0.01;
var    boundingBox_MAIN_CHARACTER_upper_edge =  1.253;
var    boundingBox_MAIN_CHARACTER_near_edge  =  0.179;     
var    boundingBox_MAIN_CHARACTER_far_edge   = -0.179;

int        numberOfCollisionObjects              =  5;

var    left_edge_SecondaryObjects[500];
var    right_edge_SecondaryObjects[500];
var    lower_edge_SecondaryObjects[500];
var    upper_edge_SecondaryObjects[500];
var    near_edge_SecondaryObjects[500];
var    far_edge_SecondaryObjects[500];

bool       RIGHT = true;
bool       LEFT  = true;                                      
bool       UP    = true;
bool       DOWN  = true;

GLuint     objectNumber;

#include "cpp/collisionCheck.cpp" 
//------------------------------------------------------------------------------------------------------------------------------------

//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################




void InitGL( void )//__END_INIT__@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@___END_INIT__
{

       
        eyePosition[0]                     =  -0.0; 
        eyePosition[1]                     =   0.0; 
        eyePosition[2]                     =   0.0;
        
        look_LEFT_RIGHT                   =    0.0;
        look_UP_DOWN                      =    0.0;   
        
        
        //==========================================================================
#ifdef WIN32    
#include "cpp/setPixelFormat.cpp"
#include "headerFiles/glext_Init_B.cpp" 
        //-------------------------------------
        SetVSyncState(true);        
#endif
        
    

        //-------------------------------------------------------------------------------------------------------------------     
        #include "_SHADERS/BACKGROUND/goldenSunset_INIT.cpp"  
        //-------------------------------------------------------------------------------------------------------------------     
         #include "_SHADERS/BACKGROUND/plant_INIT.cpp"      
        //-------------------------------------------------------------------------------------------------------------------     
        #include "_SHADERS/BACKGROUND/wood_INIT.cpp"  
        //-------------------------------------------------------------------------------------------------------------------     
        #include "_SHADERS/BACKGROUND/backDrop_INIT.cpp"      //__SHADER_AND_MODEL_WERE_GIVEN_SAME_NAME
        #include "_MODEL_FOLDERS_/backDrop/backDrop_Init.cpp" //__SHADER_AND_MODEL_WERE_GIVEN_SAME_NAME
        //===================================================================================================================    
        #include "_MODEL_FOLDERS_/marcParts/marc_INIT.cpp"
        //------------------------------------------------------------------------------------------------------------------- 
        #include "_MODEL_FOLDERS_/marcParts/head/head_Init.cpp"                                                                   
        //-------------------------------------------------------------------------------------------------------------------
        #include "_MODEL_FOLDERS_/tile_2m/tile_2m_Init.cpp"     
        //-------------------------------------------------------------------------------------------------------------------
        #include "_MODEL_FOLDERS_/pyramidTile/pyramidTile_Init.cpp"        
        //-------------------------------------------------------------------------------------------------------------------
        #include "_MODEL_FOLDERS_/smallPillar/smallPillar_Init.cpp"        
        //-------------------------------------------------------------------------------------------------------------------
        #include "_MODEL_FOLDERS_/plantPot_01/plantPot_01_Init.cpp"        
        //-------------------------------------------------------------------------------------------------------------------
        #include "_MODEL_FOLDERS_/plant_01/plant_01_Init.cpp"                                                             
        //--------------------------------------------------------------                                                    
        #include "_MODEL_FOLDERS_/rightWall_2x1/rightWall_2x1_Init.cpp"                                                             
        //--------------------------------------------------------------                                                    
        #include "_MODEL_FOLDERS_/backWall_2x2/backWall_2x2_Init.cpp"                                                             
        //--------------------------------------------------------------                                                    
        #include "_MODEL_FOLDERS_/spikyBall_0/spikyBall_0_Init.cpp"                                                             
        //===================================================================================================================         
        #include "_MODEL_FOLDERS_/springBoard/baseMain/baseMain_Init.cpp"                                                                   
        //====================================================================================                                          
        #include "_MODEL_FOLDERS_/springBoard/springCore/springCore_Init.cpp"                                                                   
        //====================================================================================                                          
        #include "_MODEL_FOLDERS_/springBoard/spring/spring_Init.cpp"                                                                   
        //====================================================================================           
       
        
        
        
        
        //=================================================================================================================== 
        
        
        glEnable(GL_DEPTH_TEST);
        glDepthFunc(GL_LEQUAL);	
        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
        //glAlphaFunc(GL_GREATER, 0.1); //I'm more guessing than remembering here, 
        //but I believe under some drivers models(iOS?), this will cause shader failure, 
        //I seem to remember removing this, but leaving it here as a reminder at least half a year ago.
        glEnable(GL_CULL_FACE);
        glCullFace(GL_BACK);  
        
        
        //=====================================================================================================================
        
        
        
        
        
}//__END_INIT__@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@___END_INIT__



//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################


void RenderGL(void)
{
        

                 if(marcWalking)
                 {
                           if(resetAnimation)
                           {
                                    mainBodyPosition_setSelection         = 1;
                                    setSelection_LEFT_ARM                 = 1;
                                    setSelection_RIGHT_ARM                = 1;
                                    setSelection_LEFT_LEG                 = 1;
                                    setSelection_RIGHT_LEG                = 1;                                    
                                    setSelection_HEAD                     = 1;
                                    setSelection_TORSO                    = 1;
                                    setSelection_HIPS                     = 1;
                                    
                                    resetAnimation = false;
                           }
                           
                           #include "_MODEL_FOLDERS_/marcParts/ME_AnimationSet_WALK.cpp"
                           #include "_MODEL_FOLDERS_/marcParts/ME_animationSequencing.cpp" 
                 }      

        //======================================================_SHADOWS_BEGIN_===========================================================================	                       
        //======================================================_SHADOWS_BEGIN_===========================================================================	                       
        //======================================================_SHADOWS_BEGIN_===========================================================================	                       
        //======================================================_SHADOWS_BEGIN_===========================================================================	                       
        //=========================================================================================================================================================    

   

        
        
        
        
        
        //======================================================_SHADOWS_END_=============================================================================	                       
        //======================================================_SHADOWS_END_=============================================================================	                       
        //======================================================_SHADOWS_END_=============================================================================	 
        
        //##################################################################################################################################################################################################        
        //##################################################################################################################################################################################################         
        //##################################################################################################################################################################################################         
        //##################################################################################################################################################################################################          
        
        //========================================================================================================================================================        
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //========================================================================================================================================================        
        #ifdef __APPLE__    
        glBindFramebuffer(GL_FRAMEBUFFER, msaaFramebuffer);
        #endif    
        //========================================================================================================================================================        
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!        
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!          
        //========================================================================================================================================================
        //=========================================================================================================================================================    
        glClearColor( 0.0f, 0.0f, 0.0f, 0.5f );
        glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); 
        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); 
        //========================================================================================================================================================= 
        #ifdef __APPLE__
        glViewport(0, 0, viewWidth, viewHeight);
        PerspectiveMatrix(projection, 35,(float)viewWidth / (float)viewHeight, 1.0, 10000);
        //--------------------------------------------
        Rotate(projection, 0.0, 0.0, 1.0, -90.0);//_____FOR_iOS_LANDSCAPE_VIEW 
        //projection[12] = eyePosition[1];
        //projection[13] = eyePosition[0];
        //projection[15] = eyePosition[2];
        #endif
        #ifdef WIN32
        glViewport(0, 0, (GLsizei)viewWidth, (GLsizei)viewHeight);
        PerspectiveMatrix(projection, 35,(float)viewWidth / (float)viewHeight, 1.0, 10000);
        //--------------------------------------------        
        //projection[12] = eyePosition[0];
        //projection[13] = eyePosition[1];
        //projection[15] = eyePosition[2];                 
        #endif
        //Rotate(projection, 1.0, 0.0, 0.0, look_UP_DOWN);
        //Rotate(projection, 0.0, 1.0, 0.0, -look_LEFT_RIGHT);        
        
        //#################################################################################################################################################################        
        
        
        
        
        
        
        
        #include "_MODEL_FOLDERS_/backDrop/backDrop_Render.cpp"                                                           
        //======================================================================================================================
        #include "drawTiles.cpp"      
        //======================================================================================================================
        #include "_MODEL_FOLDERS_/marcParts/RenderMarc.cpp"
        //======================================================================================================================
        #include  "ADD_COLLISION_BALL/RENDER_1.cpp"
        //======================================================================================================================
        #include "_MODEL_FOLDERS_/spikyBall_0/spikyBall_0_Render.cpp"              
        //======================================================================================================================       
        #include "_MODEL_FOLDERS_/springBoard/baseMain/baseMain_Render.cpp"                                                                 
        //======================================================================================================================                                          
        #include "_MODEL_FOLDERS_/springBoard/springCore/springCore_Render.cpp"                                                                 
        //======================================================================================================================                                          
        #include "_MODEL_FOLDERS_/springBoard/spring/spring_Render.cpp"                                                                 
        //======================================================================================================================           
		     
        

        
        
#ifdef WIN32
        SwapBuffers( hDC );
#endif
}

//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################


#ifdef WIN32 
void ProcessKeyboard()					
{
//#########################################################################################################################################################       
        
   
   
  
      
    if (keys['L'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[0]    += .05;
    }	
    //--------------------------------------------------    
    if (keys['J'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[0]    -= .05;
    }      
    //--------------------------------------------------      
    if (keys['I'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[1]    += .05;
    }	
    //--------------------------------------------------    
    if (keys['K'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[1]    -= .05;
    }      
    //--------------------------------------------------       
    if (keys['O'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[1]    += .05;
    }	
    //--------------------------------------------------    
    if (keys['U'] && !keys[VK_SHIFT])
	{
          goldenSunset_LIGHT_POSITION_01[1]    -= .05;
    }      
    //--------------------------------------------------       
          
      //=========================================================================      
      
       //----------------------------------------------
       if(keys[VK_F8])
       {
             ofstream outSettings("settings.cpp");
             
             outSettings << "var         goldenSunset_LIGHT_POSITION_01[]    =  {"   << goldenSunset_LIGHT_POSITION_01[0] << ", "
                                                                                     << goldenSunset_LIGHT_POSITION_01[1] << ", "
                                                                                     << goldenSunset_LIGHT_POSITION_01[2] << ", 1.0};\n\n";            
            
            
            
             //outSettings << "var         aluminum_ATTENUATION            =  " << aluminum_ATTENUATION << ";\n";
             //outSettings << "var         aluminum_SHININESS              =  " << aluminum_SHININESS << ";\n";             
             //outSettings << "var         adjustLightProjectionMatrix   =  " << adjustLightProjectionMatrix << ";\n\n\n";             
            
             //------------------------------------------------------------------------------------------------------------------------------
             outSettings << "var         eyeposition[]    =  {"   << eyeposition[0] << ", "
                                                                  << eyeposition[1] << ", "
                                                                  << eyeposition[2] << ", 1.0};\n";                
             //------------------------------------------------------------------------------------------------------------------------------      
      
             outSettings << "var         lookAt[]         =  {"   << lookAt[0] << ", "
                                                                  << lookAt[1] << ", "
                                                                  << lookAt[2] << ", 1.0};\n\n";                
             //------------------------------------------------------------------------------------------------------------------------------      
      
     
      
      
       }
       //----------------------------------------------      
     


#include "_MODEL_FOLDERS_/marcParts/marc_KEYBOARD_CONTROLS.cpp"

//=======================================================================================
    if (keys['A'] && !keys[VK_SHIFT])
	{
          eyeposition[0] += 0.05;
          lookAt[0]      -= 0.05;
    }	
//-----------------------------------     
    if (keys['D'] && !keys[VK_SHIFT])
	{
          eyeposition[0] -= 0.05;
          lookAt[0]      += 0.05;    
    }
//=================================== 
    if (keys['S'] && !keys[VK_SHIFT])
	{
          eyeposition[1] += 0.05;
          lookAt[1]      -= 0.05;   
    }
//-----------------------------------	
    if (keys['W'] && !keys[VK_SHIFT])
	{
          eyeposition[1] -= 0.05;       
          lookAt[1]      += 0.05;    
//-----------------------------------  
    }    
    if (keys['Q'] && !keys[VK_SHIFT])
	{
          eyeposition[2] += 0.05;      
          lookAt[2]      -= 0.05;     
    }
//===================================   
    if (keys['E'] && !keys[VK_SHIFT])
	{
          eyeposition[2] -= 0.05;
          lookAt[2]      += 0.05;     
    }
//===================================  	

//=======================================================================================
//=======================================================================================
    if (keys['A'] && keys[VK_SHIFT])
	{
          lookAt[0]    += 0.1;
    }	
//-----------------------------------     
    if (keys['D'] && keys[VK_SHIFT])
	{
          lookAt[0]    -= 0.1;
    }
//=================================== 
    if (keys['S'] && keys[VK_SHIFT])
	{
          lookAt[1] += 0.1;
    }
//-----------------------------------	
    if (keys['W'] && keys[VK_SHIFT])
	{
          lookAt[1] -= 0.1;       
    }    
//===================================   
    if (keys['Q'] && keys[VK_SHIFT])
	{
          lookAt[2] += 0.1;      
    }
//-----------------------------------  	
    if (keys['E'] && keys[VK_SHIFT])
	{
          lookAt[2] -= 0.1;
    }
//=======================================================================================




//#########################################################################################################################################################       
}
#endif


//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################



void shutDownGL( void )
{
#ifdef WIN32
#include "cpp/shutDownWin.cpp"
#endif 	 
        
        //====================================================================================
        #include "_MODEL_FOLDERS_/marcParts/DeleteMarc.cpp"  
        //====================================================================================
        #include "_MODEL_FOLDERS_/marcParts/head/head_Shutdown.cpp"                                                               
        //====================================================================================   
        #include "_MODEL_FOLDERS_/springBoard/baseMain/baseMain_Shutdown.cpp"                                                               
        //====================================================================================         
        #include "_MODEL_FOLDERS_/springBoard/springCore/springCore_Shutdown.cpp"                                                               
        //====================================================================================                                                              
        #include "_MODEL_FOLDERS_/springBoard/spring/spring_Shutdown.cpp"                                                               
        //====================================================================================        
        
}


//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================




